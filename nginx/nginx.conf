proxy_cache_key $scheme$proxy_host$uri;
proxy_cache_path /elastic/proxy-cache/tiles/
  use_temp_path=on
  keys_zone=tiles:100m
  inactive=24h
  max_size=100g
  loader_files=1000;
proxy_cache_revalidate on;
proxy_cache_valid any 1h;
proxy_temp_path /elastic/proxy-cache/tmp/;

server {
  listen 80 default_server;
  listen [::]:80 default_server ipv6only=on;

  root /elastic/kartotherian/www;
  index index.html index.htm;

  # Make site accessible from http://localhost/
  server_name kartotherian.kibana.rocks;

  location = / {
    return 302 /example;
  }

  location = /oauth2/auth {
    internal;
    proxy_pass http://127.0.0.1:4180;
  }

  location /oauth2/ {
    proxy_pass http://127.0.0.1:4180;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
  }

  location /v1/ {
    auth_request /oauth2/auth;
    error_page 401 = /oauth2/sign_in;

    proxy_cache tiles;
    proxy_pass http://127.0.0.1:6533/;
  }

  location / {
    auth_request /oauth2/auth;
    error_page 401 = /oauth2/sign_in;

    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
  }
}

# HTTPS server
#
#server {
#  listen 443;
#  server_name localhost;
#
#  root html;
#  index index.html index.htm;
#
#  ssl on;
#  ssl_certificate cert.pem;
#  ssl_certificate_key cert.key;
#
#  ssl_session_timeout 5m;
#
#  ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#  ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
#  ssl_prefer_server_ciphers on;
#
#  location / {
#    try_files $uri $uri/ =404;
#  }
#}
